apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-hello
  namespace: nginx
  labels:
    app: nginxhello
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginxhello
  template:
    metadata:
      labels:
        app: nginxhello
    spec:
      containers:
      - name: nginxhello
        image: registry.k8s.io/e2e-test-images/echoserver:2.3
        ports:
        - containerPort: 8080
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

---
kind: Service
apiVersion: v1
metadata:
  name: nginxhello
  namespace: nginx
  labels:
    app: nginxhello
spec:
  selector:
    app: nginxhello
  ports:
  - name: http
    port: 80
    targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginxhello
  namespace: nginx
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: sg-external
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:{account_id}:certificate/{certificate_id}
    external-dns.alpha.kubernetes.io/hostname: nginxhello.jerryljh.me
spec:
  ingressClassName: alb
  rules:
  - host: nginxhello.jerryljh.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginxhello
            port:
              number: 80
